{"ast":null,"code":"var _jsxFileName = \"/Users/marat/Documents/ProCode/react-axios-swapi/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swapi from \"./Swapi\";\nimport Info from \"./Info\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [hero, setHero] = useState(\"\");\n  const [heroId, setHeroId] = useState(1);\n  const [starships, setStarships] = useState([]);\n  const [starshipNames, setStarshipsNames] = useState([]);\n  useEffect(() => {\n    const getHero = async id => {\n      let url = `https://swapi.dev/api/people/${id}/`;\n      await axios.get(url).then(function (res) {\n        setHero(res.data.name);\n        setStarships([]);\n        setStarshipsNames([]);\n        const ships = [];\n        res.data.starships.forEach(async starship => {\n          let url = starship;\n          ships.push(new Promise((res, req) => {\n            axios.get(url).then(res2 => {\n              res(res2.data);\n            }).catch(err => {\n              console.log(\"axios err\", err);\n            });\n          }));\n        });\n        Promise.all(ships).then(val => {\n          setStarships(val);\n          setStarshipsNames(val.map(elt => elt.name));\n        }).catch(err => {\n          console.log(\"axios err\", err);\n        });\n      });\n    };\n\n    getHero(heroId);\n  }, [heroId]);\n\n  const onChange = e => {\n    setHeroId(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"number\",\n      type: \"number\",\n      onChange: onChange,\n      value: heroId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swapi, {\n      hero: hero,\n      starships: starships\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"vvd+vOAeZj8EFcVMYDxWPTXvI/s=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/marat/Documents/ProCode/react-axios-swapi/src/components/Main.js"],"names":["React","useState","useEffect","axios","Swapi","Info","Main","hero","setHero","heroId","setHeroId","starships","setStarships","starshipNames","setStarshipsNames","getHero","id","url","get","then","res","data","name","ships","forEach","starship","push","Promise","req","res2","catch","err","console","log","all","val","map","elt","onChange","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,aAAD,EAAgBC,iBAAhB,IAAqCb,QAAQ,CAAC,EAAD,CAAnD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC5B,UAAIC,GAAG,GAAI,gCAA+BD,EAAG,GAA7C;AACA,YAAMb,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoB,UAAUC,GAAV,EAAe;AACvCZ,QAAAA,OAAO,CAACY,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAP;AACAV,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AAEA,cAAMS,KAAK,GAAG,EAAd;AACAH,QAAAA,GAAG,CAACC,IAAJ,CAASV,SAAT,CAAmBa,OAAnB,CAA2B,MAAOC,QAAP,IAAoB;AAC7C,cAAIR,GAAG,GAAGQ,QAAV;AACAF,UAAAA,KAAK,CAACG,IAAN,CACE,IAAIC,OAAJ,CAAY,CAACP,GAAD,EAAMQ,GAAN,KAAc;AACxBzB,YAAAA,KAAK,CACFe,GADH,CACOD,GADP,EAEGE,IAFH,CAESU,IAAD,IAAU;AAACT,cAAAA,GAAG,CAACS,IAAI,CAACR,IAAN,CAAH;AAAe,aAFlC,EAGGS,KAHH,CAGUC,GAAD,IAAS;AAACC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AAA8B,aAHjD;AAID,WALD,CADF;AAQD,SAVD;AAYAJ,QAAAA,OAAO,CAACO,GAAR,CAAYX,KAAZ,EACGJ,IADH,CACSgB,GAAD,IAAS;AACbvB,UAAAA,YAAY,CAACuB,GAAD,CAAZ;AACArB,UAAAA,iBAAiB,CAACqB,GAAG,CAACC,GAAJ,CAASC,GAAD,IAASA,GAAG,CAACf,IAArB,CAAD,CAAjB;AACD,SAJH,EAKGQ,KALH,CAKUC,GAAD,IAAS;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AAA+B,SALlD;AAMD,OAxBK,CAAN;AAyBD,KA3BD;;AA4BAhB,IAAAA,OAAO,CAACN,MAAD,CAAP;AACD,GA9BQ,EA8BN,CAACA,MAAD,CA9BM,CAAT;;AAgCA,QAAM6B,QAAQ,GAAIC,CAAD,IAAO;AACtB7B,IAAAA,SAAS,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAEH,QAHZ;AAIE,MAAA,KAAK,EAAE7B;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,SAAS,EAAEI;AAA9B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApDD;;GAAML,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Swapi from \"./Swapi\";\nimport Info from \"./Info\";\n\nimport \"./App.css\";\n\nconst Main = () => {\n  const [hero, setHero] = useState(\"\");\n  const [heroId, setHeroId] = useState(1);\n  const [starships, setStarships] = useState([]);\n  const [starshipNames, setStarshipsNames] = useState([]);\n  useEffect(() => {\n    const getHero = async (id) => {\n      let url = `https://swapi.dev/api/people/${id}/`;\n      await axios.get(url).then(function (res) {\n        setHero(res.data.name);\n        setStarships([]);\n        setStarshipsNames([]);\n\n        const ships = [];\n        res.data.starships.forEach(async (starship) => {\n          let url = starship;\n          ships.push(\n            new Promise((res, req) => {\n              axios\n                .get(url)\n                .then((res2) => {res(res2.data)})\n                .catch((err) => {console.log(\"axios err\", err)});\n            })\n          );\n        });\n\n        Promise.all(ships)\n          .then((val) => {\n            setStarships(val);\n            setStarshipsNames(val.map((elt) => elt.name));\n          })\n          .catch((err) => {console.log(\"axios err\", err);});\n      });\n    };\n    getHero(heroId);\n  }, [heroId]);\n\n  const onChange = (e) => {\n    setHeroId(e.target.value);\n  };\n\n  return (\n    <div className=\"main\">\n      <input\n        id=\"number\"\n        type=\"number\"\n        onChange={onChange}\n        value={heroId}\n      ></input>\n      <Swapi hero={hero} starships={starships} />\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}