{"ast":null,"code":"var _jsxFileName = \"/Users/marat/Documents/ProCode/react-slider/src/components/Main.js\";\nimport React from \"react\";\nimport Master from \"./Master\";\nimport Slave from \"./Slave\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      title: \"ON\",\n      level: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.changeLevel = this.changeLevel.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      title: !prevState.isToggleOn ? \"ON\" : \"OFF\"\n    }));\n  }\n\n  mount() {\n    render( /*#__PURE__*/_jsxDEV(Slave, {\n      level: this.state.level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this), document.getElementById('a'));\n  }\n\n  unmount() {\n    unmountComponentAtNode(document.getElementById('a'));\n  }\n\n  changeLevel(level) {\n    if (!this.state.isToggleOn) {\n      unmount();\n      return;\n    }\n\n    mount();\n    this.setState({\n      level: level\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Master, {\n        onHandleClick: this.handleClick,\n        titleButton: this.state.title,\n        onChangeLevel: this.changeLevel,\n        level: this.state.level\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Main;","map":{"version":3,"sources":["/Users/marat/Documents/ProCode/react-slider/src/components/Main.js"],"names":["React","Master","Slave","Main","Component","constructor","props","state","isToggleOn","title","level","handleClick","bind","changeLevel","setState","prevState","mount","render","document","getElementById","unmount","unmountComponentAtNode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,EAAAA,WAAW,GAAG;AACZ,SAAKG,QAAL,CAAeC,SAAD,KAAgB;AAC5BP,MAAAA,UAAU,EAAE,CAACO,SAAS,CAACP,UADK;AAE5BC,MAAAA,KAAK,EAAE,CAACM,SAAS,CAACP,UAAX,GAAwB,IAAxB,GAA+B;AAFV,KAAhB,CAAd;AAID;;AACDQ,EAAAA,KAAK,GAAE;AACLC,IAAAA,MAAM,eAAC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAD,EAAqCQ,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAArC,CAAN;AACD;;AACDC,EAAAA,OAAO,GAAE;AACPC,IAAAA,sBAAsB,CAACH,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAAD,CAAtB;AACD;;AACDN,EAAAA,WAAW,CAACH,KAAD,EAAO;AAChB,QAAG,CAAC,KAAKH,KAAL,CAAWC,UAAf,EAA2B;AACzBY,MAAAA,OAAO;AACP;AACD;;AACDJ,IAAAA,KAAK;AACL,SAAKF,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAEA;AADK,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE,KAAKN,WADtB;AAEE,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,KAF1B;AAGE,QAAA,aAAa,EAAE,KAAKI,WAHtB;AAIE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG;AAJpB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA9C8B;;AA+ClC;AAED,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport Master from \"./Master\";\nimport Slave from \"./Slave\";\nimport \"./App.css\";\n\nclass Main extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          isToggleOn: true,\n          title: \"ON\",\n          level: 0,\n        };\n      this.handleClick = this.handleClick.bind(this);\n      this.changeLevel = this.changeLevel.bind(this);\n    }\n    handleClick() {\n      this.setState((prevState) => ({\n        isToggleOn: !prevState.isToggleOn,\n        title: !prevState.isToggleOn ? \"ON\" : \"OFF\",\n      }));\n    };\n    mount(){\n      render(<Slave level={this.state.level} />, document.getElementById('a'))\n    }\n    unmount(){\n      unmountComponentAtNode(document.getElementById('a'))\n    }\n    changeLevel(level){\n      if(!this.state.isToggleOn) {\n        unmount()\n        return;\n      }\n      mount();\n      this.setState({\n        level: level,\n      })\n    }\n    \n    render() {\n      return (\n        <div className=\"main\">\n          <Master\n            onHandleClick={this.handleClick}\n            titleButton={this.state.title}\n            onChangeLevel={this.changeLevel}\n            level={this.state.level} \n          />\n          <div id=\"a\"></div>\n        </div>\n      );\n    }\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}