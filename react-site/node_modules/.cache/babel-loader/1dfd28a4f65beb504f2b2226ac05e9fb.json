{"ast":null,"code":"var _jsxFileName = \"/Users/marat/Documents/ProCode/react-site/src/components/Cats.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { unmountComponentAtNode } from \"react-dom\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cats = () => {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  const [isRendered, setIsRendered] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  const mount = () => {\n    console.log(\">>>> render\");\n    render( /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this), document.getElementById(\"animation\"));\n  };\n\n  const unmount = () => {\n    console.log(\">>>> unmound\");\n    unmountComponentAtNode(document.getElementById(\"animation\"));\n  };\n\n  const getCats = async () => {\n    setWaiting(true);\n    return await axios.get(\"https://api.thecatapi.com/v1/images/search\").then(res => {\n      setWaiting(false);\n      setIsRendered(true);\n      setUrl(res.data[0].url);\n    });\n  };\n\n  useEffect(() => {\n    getCats();\n  }, [isRendered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cats\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      className: \"cat_img\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cats, \"iWRu1yclVdPx38hP1loZqbdrpjs=\");\n\n_c = Cats;\nexport default Cats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cats\");","map":{"version":3,"sources":["/Users/marat/Documents/ProCode/react-site/src/components/Cats.js"],"names":["React","useState","useEffect","unmountComponentAtNode","axios","Loader","Cats","url","setUrl","isRendered","setIsRendered","waiting","setWaiting","mount","console","log","render","document","getElementById","unmount","getCats","get","then","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,sBAAT,QAAuC,WAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAAEQ,UAAF,EAAcC,aAAd,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMY,KAAK,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,IAAAA,MAAM,eAAC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAD,EAAcC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd,CAAN;AACD,GAHD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBL,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAZ,IAAAA,sBAAsB,CAACc,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAD,CAAtB;AACD,GAHD;;AAKA,QAAME,OAAO,GAAG,YAAY;AACxBR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACF,WAAO,MAAMR,KAAK,CACfiB,GADU,CACN,4CADM,EAEVC,IAFU,CAEJC,GAAD,IAAS;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,MAAAA,MAAM,CAACe,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYjB,GAAb,CAAN;AAED,KAPU,CAAb;AAQD,GAVD;;AAWAL,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACX,UAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEF,GAAV;AAAe,MAAA,SAAS,EAAC,SAAzB;AAAmC,MAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApCD;;GAAMD,I;;KAAAA,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { unmountComponentAtNode } from \"react-dom\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\n\nconst Cats = () => {\n  const [url, setUrl] = useState(\"\");\n  const [ isRendered, setIsRendered] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n\n  const mount = () => {\n    console.log(\">>>> render\");\n    render(<Loader  />, document.getElementById(\"animation\"));\n  };\n  const unmount = () => {\n    console.log(\">>>> unmound\");\n    unmountComponentAtNode(document.getElementById(\"animation\"));\n  };\n\n  const getCats = async () => {\n      setWaiting(true);\n    return await axios\n      .get(\"https://api.thecatapi.com/v1/images/search\")\n      .then((res) => {\n        setWaiting(false);\n        setIsRendered(true);\n        setUrl(res.data[0].url);\n      \n      });\n  };\n  useEffect(() => {\n    getCats();\n  }, [isRendered] )\n \n  return (\n    <div className=\"cats\">\n      <img src={url} className=\"cat_img\" alt=\"\" />\n       <Loader />\n    </div>\n   \n  );\n};\nexport default Cats;\n"]},"metadata":{},"sourceType":"module"}