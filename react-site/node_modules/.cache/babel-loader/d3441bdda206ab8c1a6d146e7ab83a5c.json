{"ast":null,"code":"var _jsxFileName = \"/Users/marat/Documents/ProCode/react-timer/src/components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport StopTimer from \"./StopTimer\";\nimport ButtonPlay from \"./ButtonPlay\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet distance = 0;\n\nconst Timer = () => {\n  _s();\n\n  let [timerId, setTimerId] = useState(null);\n  const [paused, setPaused] = useState(false);\n  let [stopTime, setStopTime] = useState(\"00:00:00\");\n  let [endDateString, setEndDateString] = useState(\"00:00\");\n  let titleButton = [{\n    name: \"inactive\",\n    value: \"\\ue807\"\n  }, {\n    name: \"active\",\n    value: \"\\ue807\"\n  }, {\n    name: \"pause\",\n    value: \"\\u01C1\"\n  }];\n  let [buttonTitle, setButtonTitle] = useState(titleButton[0].value);\n\n  const setTimer = () => {\n    distance = distance - 1000;\n\n    if (distance < 0) {\n      distance = 0;\n      stopTimer();\n    }\n\n    console.log(\"tick\");\n    let hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    let minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    let seconds = Math.floor(distance % (1000 * 60) / 1000);\n    let comps = [hours.toString().padStart(2, \"0\"), minutes.toString().padStart(2, \"0\"), seconds.toString().padStart(2, \"0\")];\n    console.log(comps);\n    setStopTime(`${comps[0]}:${comps[1]}:${comps[2]}`);\n  };\n\n  const stopTimer = () => {\n    clearInterval(timerId);\n  };\n\n  useEffect(() => {\n    function update(distance) {\n      if (timerId != null) {\n        document.querySelector(\".timer-animation\").classList.remove(\"pause-anim\");\n        document.querySelector(\".timer-animation\").classList.add(\"go-anim\");\n      }\n    }\n  });\n\n  const visualCountDown = () => {\n    console.log(\"timerId\", timerId);\n\n    if (timerId === null && distance === 0) {\n      let endDate = new Date();\n      let now = new Date();\n      let a = endDateString.split(\":\");\n      console.log(\"endDateString\", endDateString);\n      endDate.setHours(+a[0]);\n      endDate.setMinutes(+a[1]);\n      console.log(\"start\");\n\n      if (endDate.getTime() < now.getTime()) {\n        distance = endDate.getTime() - now.getTime() + 1000 * 60 * 60 * 24;\n      } else {\n        distance = endDate.getTime() - now.getTime();\n      }\n\n      ;\n      setButtonTitle(titleButton[2].value);\n      setTimerId(setInterval(() => setTimer(), 1000));\n      setPaused(false);\n    } else {\n      if (paused) {\n        setTimerId(setInterval(setTimer, 1000));\n        setButtonTitle(titleButton[2].value);\n        console.log(\"resume\");\n      } else {\n        setButtonTitle(titleButton[1].value);\n        clearInterval(timerId);\n        setTimerId(null);\n        console.log(\"pause\");\n      }\n\n      setPaused(!paused);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        id: \"animation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: stopTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPlay, {\n        click: visualCountDown,\n        titleButton: buttonTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StopTimer, {\n      click: e => setEndDateString(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"RPohOc1cZJbimUmfVMkdrKJiZT8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/marat/Documents/ProCode/react-timer/src/components/Timer.js"],"names":["React","useState","useEffect","StopTimer","ButtonPlay","distance","Timer","timerId","setTimerId","paused","setPaused","stopTime","setStopTime","endDateString","setEndDateString","titleButton","name","value","buttonTitle","setButtonTitle","setTimer","stopTimer","console","log","hours","Math","floor","minutes","seconds","comps","toString","padStart","clearInterval","update","document","querySelector","classList","remove","add","visualCountDown","endDate","Date","now","a","split","setHours","setMinutes","getTime","setInterval","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StopTimer from \"./StopTimer\";\nimport ButtonPlay from \"./ButtonPlay\";\nimport \"./App.css\";\n\nlet distance = 0;\n\nconst Timer = () => {\n  let [timerId, setTimerId] = useState(null);\n  const [paused, setPaused] = useState(false);\n  \n  let [stopTime, setStopTime] = useState(\"00:00:00\");\n  let [endDateString, setEndDateString] = useState(\"00:00\");\n  \n  let titleButton = [\n    { name: \"inactive\", value: \"\\ue807\" },\n    { name: \"active\", value: \"\\ue807\" },\n    { name: \"pause\", value: \"\\u01C1\" },\n  ];\n  let [buttonTitle, setButtonTitle] = useState(titleButton[0].value); \n\n  const setTimer = () => {\n    distance = distance - 1000;\n    if (distance < 0) {\n        distance = 0;\n        stopTimer();\n    }\n    console.log(\"tick\");\n    let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n    let comps = [hours.toString().padStart(2, \"0\"), minutes.toString().padStart(2, \"0\"), seconds.toString().padStart(2, \"0\")];\n    console.log(comps);\n    setStopTime(`${comps[0]}:${comps[1]}:${comps[2]}`);\n  };\n  const stopTimer = () => {\n    clearInterval(timerId);\n  };\nuseEffect(() => {\n    function update(distance) {\n        if(timerId != null) {\n        document.querySelector(\".timer-animation\").classList.remove(\"pause-anim\");\n        document.querySelector(\".timer-animation\").classList.add(\"go-anim\");\n    }\n    }\n      });\n\n  const visualCountDown = () => {\n    console.log(\"timerId\", timerId);\n    if (timerId === null && distance === 0) {\n      let endDate = new Date();\n      let now = new Date();\n      let a = endDateString.split(\":\");\n      console.log(\"endDateString\", endDateString);\n      endDate.setHours(+a[0]);\n      endDate.setMinutes(+a[1]);\n      console.log(\"start\");\n\n      if (endDate.getTime() < now.getTime()) {\n        distance = endDate.getTime() - now.getTime() + 1000 * 60 * 60 * 24;\n      } else {\n        distance = endDate.getTime() - now.getTime();\n      };\n      setButtonTitle(titleButton[2].value);\n      setTimerId(setInterval(() => setTimer(), 1000));\n      setPaused(false);\n    } else {\n        if(paused) {\n            setTimerId(setInterval(setTimer, 1000));\n            setButtonTitle(titleButton[2].value);\n            console.log(\"resume\");\n        } else {\n            setButtonTitle(titleButton[1].value);\n            clearInterval(timerId);\n            setTimerId(null);\n            console.log(\"pause\");\n        }\n        setPaused(!paused);\n    }\n    };\n\n  return (\n    <div>\n      <div className=\"player\">\n        <div className=\"timer\" id=\"animation\">\n      <p>{stopTime}</p>\n        </div>\n        <ButtonPlay click = {visualCountDown}\n                    titleButton = {buttonTitle} />\n\n      </div>\n      <StopTimer\n        click={(e) => setEndDateString(e.target.value)}\n      />\n    </div>\n  );\n};\n\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}